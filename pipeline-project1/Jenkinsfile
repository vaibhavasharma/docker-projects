pipeline {
    agent any

    environment {
        NVM_DIR = "${WORKSPACE}/.nvm"
        NODE_VERSION = '14'
    }

    stages {
        stage('Setup NVM') {
            steps {
                script {
                    sh '''
                        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
                        export NVM_DIR="${WORKSPACE}/.nvm"
                        [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
                        nvm install ${NODE_VERSION}
                        nvm use ${NODE_VERSION}
                    '''
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    sh '''
                        export NVM_DIR="${WORKSPACE}/.nvm"
                        [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
                        nvm use ${NODE_VERSION}
                        npm install
                    '''
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    sh '''
                        export NVM_DIR="${WORKSPACE}/.nvm"
                        [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
                        nvm use ${NODE_VERSION}
                        npm test
                    '''
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-credentials-id', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh '''
                            export NVM_DIR="${WORKSPACE}/.nvm"
                            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
                            nvm use ${NODE_VERSION}
                            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                            docker build -t your-docker-repo/nodejs-app:latest .
                            docker push your-docker-repo/nodejs-app:latest
                        '''
                    }
                }
            }
        }
    }
}